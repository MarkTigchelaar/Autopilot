[
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario0.txt",
        "astString": "a",
        "tokenTypeString": "IDENTIFIER",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario1.txt",
        "astString": "(-a)",
        "tokenTypeString": "(MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario2.txt",
        "astString": "(a * a)",
        "tokenTypeString": "(IDENTIFIER STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario3.txt",
        "astString": "(a % a)",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario4.txt",
        "astString": "(a + a)",
        "tokenTypeString": "(IDENTIFIER PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario5.txt",
        "astString": "a",
        "tokenTypeString": "IDENTIFIER",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario6.txt",
        "astString": "(a ^ a)",
        "tokenTypeString": "(IDENTIFIER CARROT IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario7.txt",
        "astString": "(a / a)",
        "tokenTypeString": "(IDENTIFIER SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario8.txt",
        "astString": "(a - a)",
        "tokenTypeString": "(IDENTIFIER MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario9.txt",
        "astString": "(a ^ a)",
        "tokenTypeString": "(IDENTIFIER CARROT IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario10.txt",
        "astString": "((a * a) / a)",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario11.txt",
        "astString": "((a ^ a) % a)",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario12.txt",
        "astString": "((a / a) % a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario13.txt",
        "astString": "(a - (a ^ a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario14.txt",
        "astString": "(a + a)",
        "tokenTypeString": "(IDENTIFIER PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario15.txt",
        "astString": "(a ^ a)",
        "tokenTypeString": "(IDENTIFIER CARROT IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario16.txt",
        "astString": "(a - a)",
        "tokenTypeString": "(IDENTIFIER MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario17.txt",
        "astString": "(a * a)",
        "tokenTypeString": "(IDENTIFIER STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario18.txt",
        "astString": "((a % a) - a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario19.txt",
        "astString": "(a ^ (a ^ a))",
        "tokenTypeString": "(IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario20.txt",
        "astString": "(a / a)",
        "tokenTypeString": "(IDENTIFIER SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario21.txt",
        "astString": "((a * a) * a)",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario22.txt",
        "astString": "((a / a) - a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario23.txt",
        "astString": "((a % a) + a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario24.txt",
        "astString": "(a * a)",
        "tokenTypeString": "(IDENTIFIER STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario25.txt",
        "astString": "((a + a) + a)",
        "tokenTypeString": "((IDENTIFIER PLUS IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario26.txt",
        "astString": "(a % a)",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario27.txt",
        "astString": "((a % a) % a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario28.txt",
        "astString": "((a ^ a) + a)",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario29.txt",
        "astString": "(a / a)",
        "tokenTypeString": "(IDENTIFIER SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario30.txt",
        "astString": "(a - a)",
        "tokenTypeString": "(IDENTIFIER MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario31.txt",
        "astString": "((a + a) - a)",
        "tokenTypeString": "((IDENTIFIER PLUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario32.txt",
        "astString": "((a / a) + a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario33.txt",
        "astString": "(a ^ a)",
        "tokenTypeString": "(IDENTIFIER CARROT IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario34.txt",
        "astString": "((a * a) + a)",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario35.txt",
        "astString": "((a ^ a) - a)",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario36.txt",
        "astString": "(a / a)",
        "tokenTypeString": "(IDENTIFIER SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario37.txt",
        "astString": "((a / a) * a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario38.txt",
        "astString": "((a - a) - a)",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario39.txt",
        "astString": "(a + a)",
        "tokenTypeString": "(IDENTIFIER PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario40.txt",
        "astString": "((a % a) / a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario41.txt",
        "astString": "(a + a)",
        "tokenTypeString": "(IDENTIFIER PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario42.txt",
        "astString": "(a * (a ^ a))",
        "tokenTypeString": "(IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario43.txt",
        "astString": "((a % a) * a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario44.txt",
        "astString": "(a / (a ^ a))",
        "tokenTypeString": "(IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario45.txt",
        "astString": "(a * a)",
        "tokenTypeString": "(IDENTIFIER STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario46.txt",
        "astString": "((a - a) + a)",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario47.txt",
        "astString": "(a - (a * a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario48.txt",
        "astString": "(a - (a / a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario49.txt",
        "astString": "(a + (a ^ a))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario50.txt",
        "astString": "(a - a)",
        "tokenTypeString": "(IDENTIFIER MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario51.txt",
        "astString": "((a ^ a) * a)",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario52.txt",
        "astString": "(a % a)",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario53.txt",
        "astString": "(a % (a ^ a))",
        "tokenTypeString": "(IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario54.txt",
        "astString": "(a % a)",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario55.txt",
        "astString": "(a + (a ^ a))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario56.txt",
        "astString": "((a ^ a) * a)",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario57.txt",
        "astString": "(a + (a * a))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario58.txt",
        "astString": "(a % a)",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario59.txt",
        "astString": "(a / (a ^ a))",
        "tokenTypeString": "(IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario60.txt",
        "astString": "((a + a) + a)",
        "tokenTypeString": "((IDENTIFIER PLUS IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario61.txt",
        "astString": "((a / a) - (a ^ a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario62.txt",
        "astString": "(a - (a * a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario63.txt",
        "astString": "((a / (a ^ a)) + a)",
        "tokenTypeString": "((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario64.txt",
        "astString": "(a - ((a / a) * a))",
        "tokenTypeString": "(IDENTIFIER MINUS ((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario65.txt",
        "astString": "((a / (a ^ a)) * a)",
        "tokenTypeString": "((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario66.txt",
        "astString": "(((a % a) % a) % a)",
        "tokenTypeString": "(((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario67.txt",
        "astString": "(a % a)",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario68.txt",
        "astString": "((a / a) * a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario69.txt",
        "astString": "(a - (a ^ a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario70.txt",
        "astString": "((a % a) * a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario71.txt",
        "astString": "((a / a) % a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario72.txt",
        "astString": "(a + (a - a))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER MINUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario73.txt",
        "astString": "((a - a) - a)",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario74.txt",
        "astString": "((a % (a ^ a)) % a)",
        "tokenTypeString": "((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario75.txt",
        "astString": "((a % a) - (a * a))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario76.txt",
        "astString": "(a - (a / a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario77.txt",
        "astString": "((a * a) / a)",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario78.txt",
        "astString": "(a * (a % a))",
        "tokenTypeString": "(IDENTIFIER STAR (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario79.txt",
        "astString": "((a / a) * a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario80.txt",
        "astString": "(a * (a ^ a))",
        "tokenTypeString": "(IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario81.txt",
        "astString": "(a + a)",
        "tokenTypeString": "(IDENTIFIER PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario82.txt",
        "astString": "(a - ((a ^ a) / a))",
        "tokenTypeString": "(IDENTIFIER MINUS ((IDENTIFIER CARROT IDENTIFIER) SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario83.txt",
        "astString": "((a - a) - (a * a))",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario84.txt",
        "astString": "((a % (a ^ a)) - a)",
        "tokenTypeString": "((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario85.txt",
        "astString": "((a % a) + a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario86.txt",
        "astString": "((a / a) / a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario87.txt",
        "astString": "((a % a) % a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario88.txt",
        "astString": "(a + (a * a))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario89.txt",
        "astString": "((a % a) + a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario90.txt",
        "astString": "(a * (a ^ a))",
        "tokenTypeString": "(IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario91.txt",
        "astString": "(a ^ a)",
        "tokenTypeString": "(IDENTIFIER CARROT IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario92.txt",
        "astString": "((a * a) + a)",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario93.txt",
        "astString": "(a - (a ^ a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario94.txt",
        "astString": "(a * (a - a))",
        "tokenTypeString": "(IDENTIFIER STAR (IDENTIFIER MINUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario95.txt",
        "astString": "((a % a) - a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario96.txt",
        "astString": "((a % a) - (a / a))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario97.txt",
        "astString": "((a / a) / (a ^ a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) SLASH (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario98.txt",
        "astString": "(((a ^ a) + a) - a)",
        "tokenTypeString": "(((IDENTIFIER CARROT IDENTIFIER) PLUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario99.txt",
        "astString": "(a - (a ^ a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario100.txt",
        "astString": "(a - (a * a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario101.txt",
        "astString": "(a % (a / a))",
        "tokenTypeString": "(IDENTIFIER MOD (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario102.txt",
        "astString": "(a + (a % a))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario103.txt",
        "astString": "(((a * a) - a) + a)",
        "tokenTypeString": "(((IDENTIFIER STAR IDENTIFIER) MINUS IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario104.txt",
        "astString": "((a / (a ^ a)) - a)",
        "tokenTypeString": "((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario105.txt",
        "astString": "(a % a)",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario106.txt",
        "astString": "(a * a)",
        "tokenTypeString": "(IDENTIFIER STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario107.txt",
        "astString": "((a * a) / a)",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario108.txt",
        "astString": "((a + (a ^ a)) - a)",
        "tokenTypeString": "((IDENTIFIER PLUS (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario109.txt",
        "astString": "((a % (a ^ a)) / a)",
        "tokenTypeString": "((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario110.txt",
        "astString": "(a - (a % a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario111.txt",
        "astString": "(a + a)",
        "tokenTypeString": "(IDENTIFIER PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario112.txt",
        "astString": "((a % a) / a)",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario113.txt",
        "astString": "((a / a) / a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario114.txt",
        "astString": "(a - a)",
        "tokenTypeString": "(IDENTIFIER MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario115.txt",
        "astString": "(((a * a) - a) - a)",
        "tokenTypeString": "(((IDENTIFIER STAR IDENTIFIER) MINUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario116.txt",
        "astString": "(((a / a) / a) * a)",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario117.txt",
        "astString": "(a % (a + a))",
        "tokenTypeString": "(IDENTIFIER MOD (IDENTIFIER PLUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario118.txt",
        "astString": "(a / (a - a))",
        "tokenTypeString": "(IDENTIFIER SLASH (IDENTIFIER MINUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario119.txt",
        "astString": "((a * a) - (a ^ a))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario120.txt",
        "astString": "((((a * a) / a) % a) * a)",
        "tokenTypeString": "((((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario121.txt",
        "astString": "((a - a) - (a % a))",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario122.txt",
        "astString": "((a % (a ^ a)) % (a ^ a))",
        "tokenTypeString": "((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) MOD (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario123.txt",
        "astString": "(((a + a) - (a ^ a)) + a)",
        "tokenTypeString": "(((IDENTIFIER PLUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER)) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario124.txt",
        "astString": "((a ^ a) + (a * a))",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) PLUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario125.txt",
        "astString": "((a + a) + ((a % a) / a))",
        "tokenTypeString": "((IDENTIFIER PLUS IDENTIFIER) PLUS ((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario126.txt",
        "astString": "((a * a) + (a / (a ^ a)))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) PLUS (IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario127.txt",
        "astString": "(a - (a * a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario128.txt",
        "astString": "((a + ((a * a) % a)) + a)",
        "tokenTypeString": "((IDENTIFIER PLUS ((IDENTIFIER STAR IDENTIFIER) MOD IDENTIFIER)) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario129.txt",
        "astString": "(((a % (a ^ a)) * a) * a)",
        "tokenTypeString": "(((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario130.txt",
        "astString": "(a * (a ^ a))",
        "tokenTypeString": "(IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario131.txt",
        "astString": "((a * a) - (a * a))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario132.txt",
        "astString": "(((a ^ a) / a) * a)",
        "tokenTypeString": "(((IDENTIFIER CARROT IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario133.txt",
        "astString": "((a / a) * a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario134.txt",
        "astString": "((a ^ a) % (a + a))",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) MOD (IDENTIFIER PLUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario135.txt",
        "astString": "((a * (a ^ a)) - a)",
        "tokenTypeString": "((IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario136.txt",
        "astString": "((a - a) + (a / a))",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) PLUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario137.txt",
        "astString": "(a + (a % a))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario138.txt",
        "astString": "(a + ((a * a) * a))",
        "tokenTypeString": "(IDENTIFIER PLUS ((IDENTIFIER STAR IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario139.txt",
        "astString": "((((a / a) - a) - a) - a)",
        "tokenTypeString": "((((IDENTIFIER SLASH IDENTIFIER) MINUS IDENTIFIER) MINUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario140.txt",
        "astString": "(a - (a * a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario141.txt",
        "astString": "((a / (a ^ a)) * a)",
        "tokenTypeString": "((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario142.txt",
        "astString": "((a ^ a) - a)",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario143.txt",
        "astString": "((a ^ a) * (a - a))",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) STAR (IDENTIFIER MINUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario144.txt",
        "astString": "((a + a) - (a % a))",
        "tokenTypeString": "((IDENTIFIER PLUS IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario145.txt",
        "astString": "(a ^ (a % a))",
        "tokenTypeString": "(IDENTIFIER CARROT (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario146.txt",
        "astString": "((a + a) - (a ^ a))",
        "tokenTypeString": "((IDENTIFIER PLUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario147.txt",
        "astString": "(((a * a) - a) + a)",
        "tokenTypeString": "(((IDENTIFIER STAR IDENTIFIER) MINUS IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario148.txt",
        "astString": "(((a ^ a) % a) + a)",
        "tokenTypeString": "(((IDENTIFIER CARROT IDENTIFIER) MOD IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario149.txt",
        "astString": "(a - ((a % a) * a))",
        "tokenTypeString": "(IDENTIFIER MINUS ((IDENTIFIER MOD IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario150.txt",
        "astString": "((a * a) % (a ^ a))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) MOD (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario151.txt",
        "astString": "(a / (a % a))",
        "tokenTypeString": "(IDENTIFIER SLASH (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario152.txt",
        "astString": "((a / a) * a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario153.txt",
        "astString": "((a * a) + (a ^ a))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) PLUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario154.txt",
        "astString": "(a - (a ^ a))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario155.txt",
        "astString": "((a % a) * (a % a))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) STAR (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario156.txt",
        "astString": "(((a / a) / a) * a)",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario157.txt",
        "astString": "((a / a) - (a % a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario158.txt",
        "astString": "(a % (a + a))",
        "tokenTypeString": "(IDENTIFIER MOD (IDENTIFIER PLUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario159.txt",
        "astString": "(a - (a ^ (a / a)))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER CARROT (IDENTIFIER SLASH IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario160.txt",
        "astString": "(a - ((a / a) * a))",
        "tokenTypeString": "(IDENTIFIER MINUS ((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario161.txt",
        "astString": "(a + (a * a))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario162.txt",
        "astString": "((a % a) - (a / a))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario163.txt",
        "astString": "((a / a) - (a % a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario164.txt",
        "astString": "((a + ((a * a) / a)) + a)",
        "tokenTypeString": "((IDENTIFIER PLUS ((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER)) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario165.txt",
        "astString": "(((a ^ a) + a) - a)",
        "tokenTypeString": "(((IDENTIFIER CARROT IDENTIFIER) PLUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario166.txt",
        "astString": "((a / a) + a)",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario167.txt",
        "astString": "(((a / a) * a) * a)",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario168.txt",
        "astString": "((((a * a) * a) * a) / a)",
        "tokenTypeString": "((((IDENTIFIER STAR IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario169.txt",
        "astString": "((((a / a) - a) + a) - (a ^ a))",
        "tokenTypeString": "((((IDENTIFIER SLASH IDENTIFIER) MINUS IDENTIFIER) PLUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario170.txt",
        "astString": "((a + ((a * a) % a)) + a)",
        "tokenTypeString": "((IDENTIFIER PLUS ((IDENTIFIER STAR IDENTIFIER) MOD IDENTIFIER)) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario171.txt",
        "astString": "(((a * a) % a) - a)",
        "tokenTypeString": "(((IDENTIFIER STAR IDENTIFIER) MOD IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario172.txt",
        "astString": "((a % a) + (a / (a - a)))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) PLUS (IDENTIFIER SLASH (IDENTIFIER MINUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario173.txt",
        "astString": "((a ^ a) - ((a / (a ^ a)) % a))",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) MINUS ((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario174.txt",
        "astString": "((((a % a) * a) * a) * a)",
        "tokenTypeString": "((((IDENTIFIER MOD IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario175.txt",
        "astString": "(a ^ (a ^ a))",
        "tokenTypeString": "(IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario176.txt",
        "astString": "(((a / a) % a) * (a - a))",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER) STAR (IDENTIFIER MINUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario177.txt",
        "astString": "((a % a) * (a % a))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) STAR (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario178.txt",
        "astString": "((a + (a * a)) - (a * a))",
        "tokenTypeString": "((IDENTIFIER PLUS (IDENTIFIER STAR IDENTIFIER)) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario179.txt",
        "astString": "(((a + a) - a) + ((a ^ a) * a))",
        "tokenTypeString": "(((IDENTIFIER PLUS IDENTIFIER) MINUS IDENTIFIER) PLUS ((IDENTIFIER CARROT IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario180.txt",
        "astString": "(a - (a / (a + a)))",
        "tokenTypeString": "(IDENTIFIER MINUS (IDENTIFIER SLASH (IDENTIFIER PLUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario181.txt",
        "astString": "((a - a) % (a - a))",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) MOD (IDENTIFIER MINUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario182.txt",
        "astString": "((a / a) % ((a - a) - a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MOD ((IDENTIFIER MINUS IDENTIFIER) MINUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario183.txt",
        "astString": "((a / a) / (a + a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) SLASH (IDENTIFIER PLUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario184.txt",
        "astString": "((a * a) + ((a % a) % a))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) PLUS ((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario185.txt",
        "astString": "(a % (a + a))",
        "tokenTypeString": "(IDENTIFIER MOD (IDENTIFIER PLUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario186.txt",
        "astString": "(a - ((a % a) % a))",
        "tokenTypeString": "(IDENTIFIER MINUS ((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario187.txt",
        "astString": "((a ^ a) / (a % a))",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) SLASH (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario188.txt",
        "astString": "((((a / a) % a) / a) % a)",
        "tokenTypeString": "((((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario189.txt",
        "astString": "((a * a) - ((a / a) * a))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) MINUS ((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario190.txt",
        "astString": "((((a * a) * a) + a) + a)",
        "tokenTypeString": "((((IDENTIFIER STAR IDENTIFIER) STAR IDENTIFIER) PLUS IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario191.txt",
        "astString": "((a + a) + ((a / (a ^ a)) * a))",
        "tokenTypeString": "((IDENTIFIER PLUS IDENTIFIER) PLUS ((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario192.txt",
        "astString": "(((a / a) + a) - ((a / a) * a))",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) PLUS IDENTIFIER) MINUS ((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario193.txt",
        "astString": "(((a - a) % a) * a)",
        "tokenTypeString": "(((IDENTIFIER MINUS IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario194.txt",
        "astString": "((a % a) - (a + (a * a)))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) MINUS (IDENTIFIER PLUS (IDENTIFIER STAR IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario195.txt",
        "astString": "((a - a) - (((a % a) / a) / a))",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) MINUS (((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER) SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario196.txt",
        "astString": "(((a ^ a) * a) / (a - (a * a)))",
        "tokenTypeString": "(((IDENTIFIER CARROT IDENTIFIER) STAR IDENTIFIER) SLASH (IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario197.txt",
        "astString": "((a - (a / a)) + ((a % a) * a))",
        "tokenTypeString": "((IDENTIFIER MINUS (IDENTIFIER SLASH IDENTIFIER)) PLUS ((IDENTIFIER MOD IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario198.txt",
        "astString": "((a + a) - (a / (a * (a ^ a))))",
        "tokenTypeString": "((IDENTIFIER PLUS IDENTIFIER) MINUS (IDENTIFIER SLASH (IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario199.txt",
        "astString": "(((((a / a) * a) * a) / (a ^ a)) - a)",
        "tokenTypeString": "(((((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER) SLASH (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario200.txt",
        "astString": "((a / a) / (a + a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) SLASH (IDENTIFIER PLUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario201.txt",
        "astString": "(((a ^ (a ^ a)) - (a / a)) - (a ^ a))",
        "tokenTypeString": "(((IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER)) MINUS (IDENTIFIER SLASH IDENTIFIER)) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario202.txt",
        "astString": "(a % func(a,a))",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER(IDENTIFIER,IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario203.txt",
        "astString": "((((a * a) / a) - a) - (a % a))",
        "tokenTypeString": "((((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER) MINUS IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario204.txt",
        "astString": "(func(a) * (a % a))",
        "tokenTypeString": "(IDENTIFIER(IDENTIFIER) STAR (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario205.txt",
        "astString": "((((a / (a ^ a)) * a) * a) - (a ^ a))",
        "tokenTypeString": "((((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER) STAR IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario206.txt",
        "astString": "(((a / a) % a) - (((a % a) % a) % a))",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER) MINUS (((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario207.txt",
        "astString": "(((a ^ (a ^ a)) / a) * (a ^ a))",
        "tokenTypeString": "(((IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER)) SLASH IDENTIFIER) STAR (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario208.txt",
        "astString": "((((a / a) % a) / a) % a)",
        "tokenTypeString": "((((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER) MOD IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario209.txt",
        "astString": "(((a * a) + a) - (a ^ a))",
        "tokenTypeString": "(((IDENTIFIER STAR IDENTIFIER) PLUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario210.txt",
        "astString": "(((a % (a ^ a)) - (a * a)) - (a * a))",
        "tokenTypeString": "(((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) MINUS (IDENTIFIER STAR IDENTIFIER)) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario211.txt",
        "astString": "((((a - (a ^ a)) * a) / a) / a)",
        "tokenTypeString": "((((IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER) SLASH IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario212.txt",
        "astString": "((a - a) - (((a % a) / a) / a))",
        "tokenTypeString": "((IDENTIFIER MINUS IDENTIFIER) MINUS (((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER) SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario213.txt",
        "astString": "(((a % a) + (a ^ a)) - ((a ^ a) / a))",
        "tokenTypeString": "(((IDENTIFIER MOD IDENTIFIER) PLUS (IDENTIFIER CARROT IDENTIFIER)) MINUS ((IDENTIFIER CARROT IDENTIFIER) SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario214.txt",
        "astString": "(((a * a) / a) + (a - ((a / a) * a)))",
        "tokenTypeString": "(((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER) PLUS (IDENTIFIER MINUS ((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario215.txt",
        "astString": "(((a - a) - a) + ((a / (a ^ a)) * a))",
        "tokenTypeString": "(((IDENTIFIER MINUS IDENTIFIER) MINUS IDENTIFIER) PLUS ((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario216.txt",
        "astString": "(((((a + a) + a) % a) % a) - (a / a))",
        "tokenTypeString": "(((((IDENTIFIER PLUS IDENTIFIER) PLUS IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario217.txt",
        "astString": "(((a - (a * a)) * a) / (a ^ a))",
        "tokenTypeString": "(((IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER)) STAR IDENTIFIER) SLASH (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario218.txt",
        "astString": "((((a ^ a) + (a * a)) + a) - (a ^ a))",
        "tokenTypeString": "((((IDENTIFIER CARROT IDENTIFIER) PLUS (IDENTIFIER STAR IDENTIFIER)) PLUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario219.txt",
        "astString": "(((a + (a * a)) + a) + (a ^ a))",
        "tokenTypeString": "(((IDENTIFIER PLUS (IDENTIFIER STAR IDENTIFIER)) PLUS IDENTIFIER) PLUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario220.txt",
        "astString": "(((a * (a % a)) % (a ^ a)) * a)",
        "tokenTypeString": "(((IDENTIFIER STAR (IDENTIFIER MOD IDENTIFIER)) MOD (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario221.txt",
        "astString": "((a / a) % func(a,a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER(IDENTIFIER,IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario222.txt",
        "astString": "((a * a) % func((a - a),a))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) MOD IDENTIFIER((IDENTIFIER MINUS IDENTIFIER),IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario223.txt",
        "astString": "((a + (a ^ a)) + (a ^ (a % a)))",
        "tokenTypeString": "((IDENTIFIER PLUS (IDENTIFIER CARROT IDENTIFIER)) PLUS (IDENTIFIER CARROT (IDENTIFIER MOD IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario224.txt",
        "astString": "((a / (a ^ a)) % (((a ^ a) + a) - a))",
        "tokenTypeString": "((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) MOD (((IDENTIFIER CARROT IDENTIFIER) PLUS IDENTIFIER) MINUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario225.txt",
        "astString": "(((a ^ a) % (a ^ a)) - a)",
        "tokenTypeString": "(((IDENTIFIER CARROT IDENTIFIER) MOD (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario226.txt",
        "astString": "((((a * a) / a) - a) - (a % a))",
        "tokenTypeString": "((((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER) MINUS IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario227.txt",
        "astString": "((((a % a) % a) * a) + (a % a))",
        "tokenTypeString": "((((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER) PLUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario228.txt",
        "astString": "(((a * (a ^ a)) + (a / a)) - a)",
        "tokenTypeString": "(((IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER)) PLUS (IDENTIFIER SLASH IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario229.txt",
        "astString": "(((a % (a / a)) - a) - (a ^ a))",
        "tokenTypeString": "(((IDENTIFIER MOD (IDENTIFIER SLASH IDENTIFIER)) MINUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario230.txt",
        "astString": "(((a / ((a % a) ^ a)) / a) * a)",
        "tokenTypeString": "(((IDENTIFIER SLASH ((IDENTIFIER MOD IDENTIFIER) CARROT IDENTIFIER)) SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario231.txt",
        "astString": "((a - (((a / a) % a) * a)) + (a ^ a))",
        "tokenTypeString": "((IDENTIFIER MINUS (((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER)) PLUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario232.txt",
        "astString": "((((a - a) + a) + a) - ((a % a) % a))",
        "tokenTypeString": "((((IDENTIFIER MINUS IDENTIFIER) PLUS IDENTIFIER) PLUS IDENTIFIER) MINUS ((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario233.txt",
        "astString": "(((a - ((((a % a) * a) * a) * a)) - a) - a)",
        "tokenTypeString": "(((IDENTIFIER MINUS ((((IDENTIFIER MOD IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER)) MINUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario234.txt",
        "astString": "(a % func((a % a),a,a))",
        "tokenTypeString": "(IDENTIFIER MOD IDENTIFIER((IDENTIFIER MOD IDENTIFIER),IDENTIFIER,IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario235.txt",
        "astString": "(((a % a) + ((a / a) * (a ^ a))) - a)",
        "tokenTypeString": "(((IDENTIFIER MOD IDENTIFIER) PLUS ((IDENTIFIER SLASH IDENTIFIER) STAR (IDENTIFIER CARROT IDENTIFIER))) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario236.txt",
        "astString": "((a / a) % func(a,a))",
        "tokenTypeString": "((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER(IDENTIFIER,IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario237.txt",
        "astString": "(((((a / a) * a) / a) - a) - (a * a))",
        "tokenTypeString": "(((((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) SLASH IDENTIFIER) MINUS IDENTIFIER) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario238.txt",
        "astString": "((((a * a) + a) - (a ^ a)) + (a * a))",
        "tokenTypeString": "((((IDENTIFIER STAR IDENTIFIER) PLUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER)) PLUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario239.txt",
        "astString": "(((a - a) - a) + ((a / (a ^ a)) * a))",
        "tokenTypeString": "(((IDENTIFIER MINUS IDENTIFIER) MINUS IDENTIFIER) PLUS ((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario240.txt",
        "astString": "(((a % (a ^ a)) - (a * a)) - (a * a))",
        "tokenTypeString": "(((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) MINUS (IDENTIFIER STAR IDENTIFIER)) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario241.txt",
        "astString": "((a / (a ^ a)) + ((a ^ a) * (a - a)))",
        "tokenTypeString": "((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS ((IDENTIFIER CARROT IDENTIFIER) STAR (IDENTIFIER MINUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario242.txt",
        "astString": "(((((a / a) * a) % a) % a) / a)",
        "tokenTypeString": "(((((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario243.txt",
        "astString": "(((((a - a) - (a % a)) - a) + (a ^ a)) - a)",
        "tokenTypeString": "(((((IDENTIFIER MINUS IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER)) MINUS IDENTIFIER) PLUS (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario244.txt",
        "astString": "((((((a % (a ^ a)) / (a ^ a)) / a) - a) - a) - a)",
        "tokenTypeString": "((((((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) SLASH (IDENTIFIER CARROT IDENTIFIER)) SLASH IDENTIFIER) MINUS IDENTIFIER) MINUS IDENTIFIER) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario245.txt",
        "astString": "((a - (a * a)) + ((a / a) * a))",
        "tokenTypeString": "((IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER)) PLUS ((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario246.txt",
        "astString": "(((((a / a) / a) * a) % (a ^ a)) % (a + a))",
        "tokenTypeString": "(((((IDENTIFIER SLASH IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER) MOD (IDENTIFIER CARROT IDENTIFIER)) MOD (IDENTIFIER PLUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario247.txt",
        "astString": "(((a - (a ^ a)) * a) - (a ^ a))",
        "tokenTypeString": "(((IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario248.txt",
        "astString": "(((a ^ a) % (a ^ a)) - a)",
        "tokenTypeString": "(((IDENTIFIER CARROT IDENTIFIER) MOD (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario249.txt",
        "astString": "((func((a / a),a,a) % a) + a)",
        "tokenTypeString": "((IDENTIFIER((IDENTIFIER SLASH IDENTIFIER),IDENTIFIER,IDENTIFIER) MOD IDENTIFIER) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario250.txt",
        "astString": "(((((a + a) + a) % a) % a) - (a / a))",
        "tokenTypeString": "(((((IDENTIFIER PLUS IDENTIFIER) PLUS IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario251.txt",
        "astString": "((((a * a) % (a ^ (a ^ a))) % (a ^ a)) % (a ^ a))",
        "tokenTypeString": "((((IDENTIFIER STAR IDENTIFIER) MOD (IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER))) MOD (IDENTIFIER CARROT IDENTIFIER)) MOD (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario252.txt",
        "astString": "(((((a + ((a * a) / a)) + (a ^ a)) + a) - (a ^ a)) + a)",
        "tokenTypeString": "(((((IDENTIFIER PLUS ((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER)) PLUS (IDENTIFIER CARROT IDENTIFIER)) PLUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER)) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario253.txt",
        "astString": "(((a % a) - a) - ((a - a) % (a - a)))",
        "tokenTypeString": "(((IDENTIFIER MOD IDENTIFIER) MINUS IDENTIFIER) MINUS ((IDENTIFIER MINUS IDENTIFIER) MOD (IDENTIFIER MINUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario254.txt",
        "astString": "((((((a / a) * a) * a) / a) % (a ^ a)) - a)",
        "tokenTypeString": "((((((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER) SLASH IDENTIFIER) MOD (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario255.txt",
        "astString": "((((a / a) - (a % a)) - (a % a)) - (a / a))",
        "tokenTypeString": "((((IDENTIFIER SLASH IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER)) MINUS (IDENTIFIER MOD IDENTIFIER)) MINUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario256.txt",
        "astString": "(((a - (a ^ (a / a))) - ((a ^ a) % a)) + a)",
        "tokenTypeString": "(((IDENTIFIER MINUS (IDENTIFIER CARROT (IDENTIFIER SLASH IDENTIFIER))) MINUS ((IDENTIFIER CARROT IDENTIFIER) MOD IDENTIFIER)) PLUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario257.txt",
        "astString": "(((a / (a ^ a)) + (a % a)) - (a / (a + a)))",
        "tokenTypeString": "(((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS (IDENTIFIER MOD IDENTIFIER)) MINUS (IDENTIFIER SLASH (IDENTIFIER PLUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario258.txt",
        "astString": "((((a % (a + a)) * a) % a) - (a * a))",
        "tokenTypeString": "((((IDENTIFIER MOD (IDENTIFIER PLUS IDENTIFIER)) STAR IDENTIFIER) MOD IDENTIFIER) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario259.txt",
        "astString": "(((((a ^ a) % a) / a) * a) % func((a - a),a))",
        "tokenTypeString": "(((((IDENTIFIER CARROT IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER((IDENTIFIER MINUS IDENTIFIER),IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario260.txt",
        "astString": "(((a + a) - ((((a % a) % a) * a) % a)) - a)",
        "tokenTypeString": "(((IDENTIFIER PLUS IDENTIFIER) MINUS ((((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario261.txt",
        "astString": "(((a % a) - a) - ((a - a) % (a - a)))",
        "tokenTypeString": "(((IDENTIFIER MOD IDENTIFIER) MINUS IDENTIFIER) MINUS ((IDENTIFIER MINUS IDENTIFIER) MOD (IDENTIFIER MINUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario262.txt",
        "astString": "((((((a - a) % a) * a) % a) * a) + ((a % a) % a))",
        "tokenTypeString": "((((((IDENTIFIER MINUS IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER) PLUS ((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario263.txt",
        "astString": "((a % a) + (a % func((a % a),a,a)))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) PLUS (IDENTIFIER MOD IDENTIFIER((IDENTIFIER MOD IDENTIFIER),IDENTIFIER,IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario264.txt",
        "astString": "(((((((a / a) / (a + a)) * a) * a) / a) % a) * a)",
        "tokenTypeString": "(((((((IDENTIFIER SLASH IDENTIFIER) SLASH (IDENTIFIER PLUS IDENTIFIER)) STAR IDENTIFIER) STAR IDENTIFIER) SLASH IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario265.txt",
        "astString": "(((a / a) * a) % ((a / a) % func(a,a)))",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) MOD ((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER(IDENTIFIER,IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario266.txt",
        "astString": "((a ^ (a ^ a)) * ((a % a) * (a % a)))",
        "tokenTypeString": "((IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER)) STAR ((IDENTIFIER MOD IDENTIFIER) STAR (IDENTIFIER MOD IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario267.txt",
        "astString": "(((((a * a) * a) + a) + a) - (((a / a) % a) * (a - a)))",
        "tokenTypeString": "(((((IDENTIFIER STAR IDENTIFIER) STAR IDENTIFIER) PLUS IDENTIFIER) PLUS IDENTIFIER) MINUS (((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER) STAR (IDENTIFIER MINUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario268.txt",
        "astString": "(((((a + a) - (a / (a * (a ^ a)))) + a) + a) + ((a / (a ^ a)) * a))",
        "tokenTypeString": "(((((IDENTIFIER PLUS IDENTIFIER) MINUS (IDENTIFIER SLASH (IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER)))) PLUS IDENTIFIER) PLUS IDENTIFIER) PLUS ((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario269.txt",
        "astString": "(a ^ func(a,a,a,(a - a),((a * a) % a)))",
        "tokenTypeString": "(IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER STAR IDENTIFIER) MOD IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario270.txt",
        "astString": "(((((((a % a) * a) * a) * a) / (a ^ (a ^ a))) / a) * (a ^ a))",
        "tokenTypeString": "(((((((IDENTIFIER MOD IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER) SLASH (IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER))) SLASH IDENTIFIER) STAR (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario271.txt",
        "astString": "(a ^ func(a,a,a,(a - a),((a % a) / a)))",
        "tokenTypeString": "(IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario272.txt",
        "astString": "((((a + a) - a) + (((((a ^ a) * a) % a) / a) % a)) - (((a % a) % a) % a))",
        "tokenTypeString": "((((IDENTIFIER PLUS IDENTIFIER) MINUS IDENTIFIER) PLUS (((((IDENTIFIER CARROT IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER) MOD IDENTIFIER)) MINUS (((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario273.txt",
        "astString": "((((a % a) - ((a + (a * a)) ^ a)) + (a * a)) - (a * a))",
        "tokenTypeString": "((((IDENTIFIER MOD IDENTIFIER) MINUS ((IDENTIFIER PLUS (IDENTIFIER STAR IDENTIFIER)) CARROT IDENTIFIER)) PLUS (IDENTIFIER STAR IDENTIFIER)) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario274.txt",
        "astString": "(((((((((a * a) * a) * a) / a) / a) % a) % a) * a) + (a % a))",
        "tokenTypeString": "(((((((((IDENTIFIER STAR IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER) SLASH IDENTIFIER) SLASH IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER) PLUS (IDENTIFIER MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario275.txt",
        "astString": "((a ^ a) + func(((a / a) * a),a,a,(a ^ a)))",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) PLUS IDENTIFIER(((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER),IDENTIFIER,IDENTIFIER,(IDENTIFIER CARROT IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario276.txt",
        "astString": "((((func((a / a),a,a) % a) + (a / a)) - a) + (a / a))",
        "tokenTypeString": "((((IDENTIFIER((IDENTIFIER SLASH IDENTIFIER),IDENTIFIER,IDENTIFIER) MOD IDENTIFIER) PLUS (IDENTIFIER SLASH IDENTIFIER)) MINUS IDENTIFIER) PLUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario277.txt",
        "astString": "((a * a) + (a / func(((a / a) / (a ^ a)),a,a,(a / a))))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) PLUS (IDENTIFIER SLASH IDENTIFIER(((IDENTIFIER SLASH IDENTIFIER) SLASH (IDENTIFIER CARROT IDENTIFIER)),IDENTIFIER,IDENTIFIER,(IDENTIFIER SLASH IDENTIFIER))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario278.txt",
        "astString": "((a - (a ^ a)) - func(((a ^ a) / (a % a)),a))",
        "tokenTypeString": "((IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER(((IDENTIFIER CARROT IDENTIFIER) SLASH (IDENTIFIER MOD IDENTIFIER)),IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario279.txt",
        "astString": "((a % a) + (a ^ func(a,a,a,(a - a),((a % a) / a))))",
        "tokenTypeString": "((IDENTIFIER MOD IDENTIFIER) PLUS (IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario280.txt",
        "astString": "((((((a % (a / a)) - a) - (a ^ a)) - a) - (a / a)) + ((a % a) * a))",
        "tokenTypeString": "((((((IDENTIFIER MOD (IDENTIFIER SLASH IDENTIFIER)) MINUS IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER)) PLUS ((IDENTIFIER MOD IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario281.txt",
        "astString": "(a % ((a + a) ^ func((a + (a - a)),a,a,(a % a))))",
        "tokenTypeString": "(IDENTIFIER MOD ((IDENTIFIER PLUS IDENTIFIER) CARROT IDENTIFIER((IDENTIFIER PLUS (IDENTIFIER MINUS IDENTIFIER)),IDENTIFIER,IDENTIFIER,(IDENTIFIER MOD IDENTIFIER))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario282.txt",
        "astString": "(((((((a ^ a) % (a ^ a)) - a) / a) / a) + a) - ((a / a) * a))",
        "tokenTypeString": "(((((((IDENTIFIER CARROT IDENTIFIER) MOD (IDENTIFIER CARROT IDENTIFIER)) MINUS IDENTIFIER) SLASH IDENTIFIER) SLASH IDENTIFIER) PLUS IDENTIFIER) MINUS ((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario283.txt",
        "astString": "((((((((a / a) % a) / a) % a) % a) / ((a % a) ^ a)) / a) * a)",
        "tokenTypeString": "((((((((IDENTIFIER SLASH IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER) SLASH ((IDENTIFIER MOD IDENTIFIER) CARROT IDENTIFIER)) SLASH IDENTIFIER) STAR IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario284.txt",
        "astString": "((((a * (a ^ a)) + (a / a)) - ((((a ^ a) / (a ^ a)) * a) * a)) - (a ^ a))",
        "tokenTypeString": "((((IDENTIFIER STAR (IDENTIFIER CARROT IDENTIFIER)) PLUS (IDENTIFIER SLASH IDENTIFIER)) MINUS ((((IDENTIFIER CARROT IDENTIFIER) SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER) STAR IDENTIFIER)) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario285.txt",
        "astString": "(((((a / a) % ((a - a) - a)) / (a - (a ^ a))) * a) - (a ^ a))",
        "tokenTypeString": "(((((IDENTIFIER SLASH IDENTIFIER) MOD ((IDENTIFIER MINUS IDENTIFIER) MINUS IDENTIFIER)) SLASH (IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER))) STAR IDENTIFIER) MINUS (IDENTIFIER CARROT IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario286.txt",
        "astString": "(((a - a) - (((a % a) / a) / a)) - ((((a * a) / a) - a) - (a % a)))",
        "tokenTypeString": "(((IDENTIFIER MINUS IDENTIFIER) MINUS (((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER) SLASH IDENTIFIER)) MINUS ((((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER) MINUS IDENTIFIER) MINUS (IDENTIFIER MOD IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario287.txt",
        "astString": "(((a + (a ^ a)) + (a ^ (a % a))) + ((((a - (a ^ a)) * a) / a) / a))",
        "tokenTypeString": "(((IDENTIFIER PLUS (IDENTIFIER CARROT IDENTIFIER)) PLUS (IDENTIFIER CARROT (IDENTIFIER MOD IDENTIFIER))) PLUS ((((IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER) SLASH IDENTIFIER) SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario288.txt",
        "astString": "(((a ^ (a ^ a)) - (a / a)) - ((((((a ^ (a ^ a)) / a) / a) * a) % (a ^ a)) % (a + a)))",
        "tokenTypeString": "(((IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER)) MINUS (IDENTIFIER SLASH IDENTIFIER)) MINUS ((((((IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER)) SLASH IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER) MOD (IDENTIFIER CARROT IDENTIFIER)) MOD (IDENTIFIER PLUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario289.txt",
        "astString": "(a + (a / (a ^ func(a,a,a,(a - a),((a * a) % a)))))",
        "tokenTypeString": "(IDENTIFIER PLUS (IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER STAR IDENTIFIER) MOD IDENTIFIER)))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario290.txt",
        "astString": "(((a / (a ^ a)) + (((((a ^ a) * (a - a)) / a) * a) / a)) + (a - ((a / a) * a)))",
        "tokenTypeString": "(((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS (((((IDENTIFIER CARROT IDENTIFIER) STAR (IDENTIFIER MINUS IDENTIFIER)) SLASH IDENTIFIER) STAR IDENTIFIER) SLASH IDENTIFIER)) PLUS (IDENTIFIER MINUS ((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario291.txt",
        "astString": "(((((a + (a * a)) + a) + ((a ^ (a ^ a)) % a)) + ((a / a) * (a ^ a))) - a)",
        "tokenTypeString": "(((((IDENTIFIER PLUS (IDENTIFIER STAR IDENTIFIER)) PLUS IDENTIFIER) PLUS ((IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER)) MOD IDENTIFIER)) PLUS ((IDENTIFIER SLASH IDENTIFIER) STAR (IDENTIFIER CARROT IDENTIFIER))) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario292.txt",
        "astString": "(a ^ func(a,a,a,(a - a),((a + a) - a),(((a % a) % a) / a)))",
        "tokenTypeString": "(IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER PLUS IDENTIFIER) MINUS IDENTIFIER),(((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario293.txt",
        "astString": "(((a % a) + (a % func((a % a),a,a))) + ((a + ((a * a) % a)) + a))",
        "tokenTypeString": "(((IDENTIFIER MOD IDENTIFIER) PLUS (IDENTIFIER MOD IDENTIFIER((IDENTIFIER MOD IDENTIFIER),IDENTIFIER,IDENTIFIER))) PLUS ((IDENTIFIER PLUS ((IDENTIFIER STAR IDENTIFIER) MOD IDENTIFIER)) PLUS IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario294.txt",
        "astString": "((((((a / a) * a) % a) % a) / a) % (((a % (a ^ a)) - (a * a)) - (a * a)))",
        "tokenTypeString": "((((((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER) MOD (((IDENTIFIER MOD (IDENTIFIER CARROT IDENTIFIER)) MINUS (IDENTIFIER STAR IDENTIFIER)) MINUS (IDENTIFIER STAR IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario295.txt",
        "astString": "(((((a * a) / a) * a) % a) + (a ^ func(a,a,a,(a - a),((a % a) / a))))",
        "tokenTypeString": "(((((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER) PLUS (IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario296.txt",
        "astString": "(((((((((a / a) * a) / a) - a) - (a * a)) + (a / a)) - (a % a)) - (a % a)) - (a / a))",
        "tokenTypeString": "(((((((((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) SLASH IDENTIFIER) MINUS IDENTIFIER) MINUS (IDENTIFIER STAR IDENTIFIER)) PLUS (IDENTIFIER SLASH IDENTIFIER)) MINUS (IDENTIFIER MOD IDENTIFIER)) MINUS (IDENTIFIER MOD IDENTIFIER)) MINUS (IDENTIFIER SLASH IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario297.txt",
        "astString": "((((a + a) + ((a % a) / a)) - (a ^ a)) + func(((a / a) * a),a,a,(a ^ a)))",
        "tokenTypeString": "((((IDENTIFIER PLUS IDENTIFIER) PLUS ((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER)) MINUS (IDENTIFIER CARROT IDENTIFIER)) PLUS IDENTIFIER(((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER),IDENTIFIER,IDENTIFIER,(IDENTIFIER CARROT IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario298.txt",
        "astString": "(((((((((a + a) + a) % a) % a) - (a / a)) / (a % (a + a))) * a) % a) - (a * a))",
        "tokenTypeString": "(((((((((IDENTIFIER PLUS IDENTIFIER) PLUS IDENTIFIER) MOD IDENTIFIER) MOD IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER)) SLASH (IDENTIFIER MOD (IDENTIFIER PLUS IDENTIFIER))) STAR IDENTIFIER) MOD IDENTIFIER) MINUS (IDENTIFIER STAR IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario299.txt",
        "astString": "((a * a) / func((a + a),a,a,(a % a),((a ^ a) % a),((a - a) - (a / a))))",
        "tokenTypeString": "((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER((IDENTIFIER PLUS IDENTIFIER),IDENTIFIER,IDENTIFIER,(IDENTIFIER MOD IDENTIFIER),((IDENTIFIER CARROT IDENTIFIER) MOD IDENTIFIER),((IDENTIFIER MINUS IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario300.txt",
        "astString": "(a / (a ^ (a ^ func(a,a,a,(a - a),((a + a) - a),(((a % a) % a) / a)))))",
        "tokenTypeString": "(IDENTIFIER SLASH (IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER PLUS IDENTIFIER) MINUS IDENTIFIER),(((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER)))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario301.txt",
        "astString": "(((((((a - a) - a) + ((a / (a ^ a)) * a)) * a) / (a ^ a)) + (a % a)) - (a / (a + a)))",
        "tokenTypeString": "(((((((IDENTIFIER MINUS IDENTIFIER) MINUS IDENTIFIER) PLUS ((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) STAR IDENTIFIER)) STAR IDENTIFIER) SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS (IDENTIFIER MOD IDENTIFIER)) MINUS (IDENTIFIER SLASH (IDENTIFIER PLUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario302.txt",
        "astString": "((((a / (a ^ a)) % (((a ^ a) + a) - a)) * (a ^ (a ^ a))) * ((a % a) * (a % a)))",
        "tokenTypeString": "((((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) MOD (((IDENTIFIER CARROT IDENTIFIER) PLUS IDENTIFIER) MINUS IDENTIFIER)) STAR (IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER))) STAR ((IDENTIFIER MOD IDENTIFIER) STAR (IDENTIFIER MOD IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario303.txt",
        "astString": "(((a % ((a + a) ^ func((a + (a - a)),a,a,(a % a)))) - (a ^ a)) - ((a / (a ^ a)) % a))",
        "tokenTypeString": "(((IDENTIFIER MOD ((IDENTIFIER PLUS IDENTIFIER) CARROT IDENTIFIER((IDENTIFIER PLUS (IDENTIFIER MINUS IDENTIFIER)),IDENTIFIER,IDENTIFIER,(IDENTIFIER MOD IDENTIFIER)))) MINUS (IDENTIFIER CARROT IDENTIFIER)) MINUS ((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) MOD IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario304.txt",
        "astString": "((a ^ a) + ((a / a) / (a ^ (a ^ func(a,a,a,(a - a),((a + a) - a),(((a % a) % a) / a))))))",
        "tokenTypeString": "((IDENTIFIER CARROT IDENTIFIER) PLUS ((IDENTIFIER SLASH IDENTIFIER) SLASH (IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER PLUS IDENTIFIER) MINUS IDENTIFIER),(((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER))))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario305.txt",
        "astString": "(((((a - a) + a) + a) - ((((a % a) % a) / a) * a)) + (a / func(((a / a) / (a ^ a)),a,a,(a / a))))",
        "tokenTypeString": "(((((IDENTIFIER MINUS IDENTIFIER) PLUS IDENTIFIER) PLUS IDENTIFIER) MINUS ((((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER)) PLUS (IDENTIFIER SLASH IDENTIFIER(((IDENTIFIER SLASH IDENTIFIER) SLASH (IDENTIFIER CARROT IDENTIFIER)),IDENTIFIER,IDENTIFIER,(IDENTIFIER SLASH IDENTIFIER))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario306.txt",
        "astString": "(a * func((a % a),a,a,(a + a),(a - (a / a)),((a / (a ^ a)) + a)))",
        "tokenTypeString": "(IDENTIFIER STAR IDENTIFIER((IDENTIFIER MOD IDENTIFIER),IDENTIFIER,IDENTIFIER,(IDENTIFIER PLUS IDENTIFIER),(IDENTIFIER MINUS (IDENTIFIER SLASH IDENTIFIER)),((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario307.txt",
        "astString": "(((((a - (a ^ a)) - (func(((a ^ a) / (a % a)),a) ^ a)) + a) - ((((a % a) % a) * a) % a)) - a)",
        "tokenTypeString": "(((((IDENTIFIER MINUS (IDENTIFIER CARROT IDENTIFIER)) MINUS (IDENTIFIER(((IDENTIFIER CARROT IDENTIFIER) SLASH (IDENTIFIER MOD IDENTIFIER)),IDENTIFIER) CARROT IDENTIFIER)) PLUS IDENTIFIER) MINUS ((((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER)) MINUS IDENTIFIER)",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario308.txt",
        "astString": "(((a / a) * a) * func((a % a),a,a,(a + a),(a - (a / a)),((a / (a ^ a)) + a)))",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER((IDENTIFIER MOD IDENTIFIER),IDENTIFIER,IDENTIFIER,(IDENTIFIER PLUS IDENTIFIER),(IDENTIFIER MINUS (IDENTIFIER SLASH IDENTIFIER)),((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario309.txt",
        "astString": "((((a * a) - a) + a) * func(((a * a) / func((a + a),a,a,(a % a),((a ^ a) % a),((a - a) - (a / a)))),a,a))",
        "tokenTypeString": "((((IDENTIFIER STAR IDENTIFIER) MINUS IDENTIFIER) PLUS IDENTIFIER) STAR IDENTIFIER(((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER((IDENTIFIER PLUS IDENTIFIER),IDENTIFIER,IDENTIFIER,(IDENTIFIER MOD IDENTIFIER),((IDENTIFIER CARROT IDENTIFIER) MOD IDENTIFIER),((IDENTIFIER MINUS IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER)))),IDENTIFIER,IDENTIFIER))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario310.txt",
        "astString": "((((((a * a) / a) * a) % a) + (a ^ func(a,a,a,(a - a),((a % a) / a)))) - (((((a ^ a) % a) / a) * a) % func((a - a),a)))",
        "tokenTypeString": "((((((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER) PLUS (IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER MOD IDENTIFIER) SLASH IDENTIFIER)))) MINUS (((((IDENTIFIER CARROT IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER) STAR IDENTIFIER) MOD IDENTIFIER((IDENTIFIER MINUS IDENTIFIER),IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario311.txt",
        "astString": "(((((a - (a * a)) * a) / (a ^ a)) + (a ^ a)) + ((a / a) / (a ^ (a ^ func(a,a,a,(a - a),((a + a) - a),(((a % a) % a) / a))))))",
        "tokenTypeString": "(((((IDENTIFIER MINUS (IDENTIFIER STAR IDENTIFIER)) STAR IDENTIFIER) SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS (IDENTIFIER CARROT IDENTIFIER)) PLUS ((IDENTIFIER SLASH IDENTIFIER) SLASH (IDENTIFIER CARROT (IDENTIFIER CARROT IDENTIFIER(IDENTIFIER,IDENTIFIER,IDENTIFIER,(IDENTIFIER MINUS IDENTIFIER),((IDENTIFIER PLUS IDENTIFIER) MINUS IDENTIFIER),(((IDENTIFIER MOD IDENTIFIER) MOD IDENTIFIER) SLASH IDENTIFIER))))))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario312.txt",
        "astString": "(((a / a) / a) * (a ^ func((((a / a) * a) * func((a % a),a,a,(a + a),(a - (a / a)),((a / (a ^ a)) + a))),a,a)))",
        "tokenTypeString": "(((IDENTIFIER SLASH IDENTIFIER) SLASH IDENTIFIER) STAR (IDENTIFIER CARROT IDENTIFIER((((IDENTIFIER SLASH IDENTIFIER) STAR IDENTIFIER) STAR IDENTIFIER((IDENTIFIER MOD IDENTIFIER),IDENTIFIER,IDENTIFIER,(IDENTIFIER PLUS IDENTIFIER),(IDENTIFIER MINUS (IDENTIFIER SLASH IDENTIFIER)),((IDENTIFIER SLASH (IDENTIFIER CARROT IDENTIFIER)) PLUS IDENTIFIER))),IDENTIFIER,IDENTIFIER)))",
        "errors": null
    },
    {
        "file": "../Testfiles/ParserTests/ExpressionAutoTestFiles/Scenario313.txt",
        "astString": "(((((a % a) - a) - ((a - a) % (a - a))) ^ (((a * a) - a) + a)) * func(((a * a) / func((a + a),a,a,(a % a),((a ^ a) % a),((a - a) - (a / a)))),a,a))",
        "tokenTypeString": "(((((IDENTIFIER MOD IDENTIFIER) MINUS IDENTIFIER) MINUS ((IDENTIFIER MINUS IDENTIFIER) MOD (IDENTIFIER MINUS IDENTIFIER))) CARROT (((IDENTIFIER STAR IDENTIFIER) MINUS IDENTIFIER) PLUS IDENTIFIER)) STAR IDENTIFIER(((IDENTIFIER STAR IDENTIFIER) SLASH IDENTIFIER((IDENTIFIER PLUS IDENTIFIER),IDENTIFIER,IDENTIFIER,(IDENTIFIER MOD IDENTIFIER),((IDENTIFIER CARROT IDENTIFIER) MOD IDENTIFIER),((IDENTIFIER MINUS IDENTIFIER) MINUS (IDENTIFIER SLASH IDENTIFIER)))),IDENTIFIER,IDENTIFIER))",
        "errors": null
    }
]