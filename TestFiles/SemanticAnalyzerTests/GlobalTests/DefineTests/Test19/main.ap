module main

define List(int) as IntList

define List(myStruct) as StructList

define List(myUnion) as UnionList

define List(myEnum) as EnumList

define List(myInterface) as InterfaceList

define List(myFunction) as FunctionList

define fun(int, float) int as myFunction

define List(IntOption) as IntOptionList

define Option(int) as IntOption

define List(SomeResult) as SomeResultList

define Result(int, someError) as SomeResult

inline pub struct myStruct uses myInterface is
    a as int

    pub fun myMethod(a as int) do
        a += 1
    end
end

pub union myUnion is
    a as myStruct,
    b as int
end

pub enum myEnum is
    a,
    b,
    c
end

pub interface myInterface is
    fun myMethod(a as int) end
end

pub error someError is
    bad
end
