module main

define Map(int: float) as IntFloatMap
define Dictionary(int: int)  as IntDict
define HashMap(string:string)  as StringHashMap


define List(int)  as IntList
define LinkedList(double)  as DoubleList
define Vector(int) as IntVector


define Set(float)  as FloatSet
define HashSet(long)  as LongHash
define TreeSet(string)  as StringTree

define Stack(string)  as StringStack

define Queue(int)  as IntQueue
define FifoQueue(float)  as FloatFIFO
define PriorityQueue(int)  as IntPriority
define Deque(string)  as StringDeque

define Option(string) as StringOption
define Result(int, SomeError) as IntResult

error SomeError is
  whoops
end

/*
Map
Dictionary
HashMap

List
LinkedList
Vector

Set
HashSet
TreeSet

Stack

Queue
FifoQueue
PriorityQueue
Deque

Option
Result
*/